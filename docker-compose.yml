services:
  postgresdb:
    image: postgres:alpine
    restart: always
    container_name: postgresdb
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - TZ=America/Sao_Paulo
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - agrocontrol
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s

  mongodb:
    networks:
      - agrocontrol
    container_name: mongodb
    image: mongo
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 3s
      retries: 5

  api:
     build:
       context: .
     container_name: api
     environment:
       - TZ=America/Sao_Paulo
     ports:
       - "5000:5000"
     networks:
       - agrocontrol
     depends_on:
       postgresdb:
         condition: service_healthy
       mongodb:
         condition: service_healthy

  simulador:
    build: ./simulador
    environment:
      - TZ=America/Sao_Paulo
    container_name: simulador
    networks:
      - agrocontrol
    depends_on:
       - api

networks:
  agrocontrol:
    driver: bridge

